root = true

[*]
indent_style = space
charset=utf-8
end_of_line = lf
insert_final_newline = true
indent_size=2

[*.json]
indent_size = 2
trim_trailing_whitespace = true

[*.xaml]
indent_size = 4
trim_trailing_whitespace = true

[*.xml]
indent_size = 4
trim_trailing_whitespace = true

[*.cs]
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true
csharp_prefer_simple_default_expression = true
dotnet_sort_system_directives_first = true

#Using directive
csharp_using_directive_placement = outside_namespace:suggestion

# Code block
csharp_prefer_braces = true:error
csharp_prefer_simple_using_statement = false

# Indent settings
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Use "this." always
dotnet_style_qualification_for_field = true:error
dotnet_style_qualification_for_event = true:error
dotnet_style_qualification_for_method = true:error
dotnet_style_qualification_for_property = true:error

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:none
dotnet_style_predefined_type_for_member_access = true:none

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_local_functions = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Modifier settings
dotnet_style_readonly_field = true:warning
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error
csharp_prefer_static_local_function = true:suggestion

# Expression-level preferences
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# Unnecessary code rules
dotnet_code_quality_unused_parameters = all:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion

# Pattern matching preferences
csharp_style_prefer_switch_expression = true:suggestion

# Anonymous type and tuple naming preferences
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion


# --------------------------------------------
# .net analyzer (on build)
# --------------------------------------------
dotnet_analyzer_diagnostic.category-Style.severity = error

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = suggestion

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = suggestion

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = suggestion

# IDE0050: Convert to tuple
dotnet_diagnostic.IDE0050.severity = suggestion

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = none

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = suggestion

# IDE0044: Add readonly modifier
 dotnet_diagnostic.IDE0044.severity = warning

# IDE0010: Add missing cases
dotnet_diagnostic.IDE0010.severity = error

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = suggestion

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = warning

# IDE0072: Add missing cases
dotnet_diagnostic.IDE0072.severity = suggestion

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = suggestion

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = none

# IDE0130: Namespace setting
dotnet_diagnostic.IDE0130.severity = none

# IDE0160: Convert to block scoped namespace
csharp_style_namespace_declarations = file_scoped:warning

# SA1200: UsingDirectivesMustBePlacedWithinNamespace
dotnet_diagnostic.SA1200.severity = none

# SA1600: All functions should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1633:FileMustHaveHeader
dotnet_diagnostic.SA1633.severity = none

# SA1601PartialElementsMustBeDocumented
dotnet_diagnostic.SA1601.severity = none

# SA1611ElementParametersMustBeDocumented
dotnet_diagnostic.SA1611.severity = suggestion

# SA1313 Lower case arguments
dotnet_diagnostic.SA1313.severity = none

# SA1615 return type documentation
dotnet_diagnostic.SA1615.severity = none

# SA1612 summary argument order
dotnet_diagnostic.SA1612.severity = none

# S125 remove commented code
dotnet_diagnostic.S125.severity = suggestion

# S2699 test must have at least one assertion (false positive on xunit xxx.Is<type>())
dotnet_diagnostic.S2699.severity = none

# SA1118 Parameters must not span multiple lines 
dotnet_diagnostic.SA1118.severity = none

# S101 Class naming should be PascalCase (generated errors use Status_404 which is a violation)
dotnet_diagnostic.S101.severity = none 

# SA1515 Single line comments should have a new line before them. This prevents use commenting linq queries as we get a format error if a new line exists.
dotnet_diagnostic.SA1515.severity = none

# SA1515 Single line comments should have a new line before them. This prevents use commenting linq queries as we get a format error if a new line exists.
dotnet_diagnostic.SA1515.severity = none

# S4457 Split function into parameter validation and async code
dotnet_diagnostic.S4457.severity = suggestion

# S3358 Nested ternaries are bad
dotnet_diagnostic.S3358.severity = suggestion

# S3925 Implement serializable compliant objects (objects extending exception need serializable functions)
dotnet_diagnostic.S3925.severity = none

# SA1614,5,6 Documentation elements type should have text
dotnet_diagnostic.SA1616.severity = none
dotnet_diagnostic.SA1615.severity = none
dotnet_diagnostic.SA1614.severity = none

# SA1618 Documentation for generic types
dotnet_diagnostic.SA1618.severity = none

# SA1602 Enumeration documentation
dotnet_diagnostic.SA1602.severity = none

# SA0001 XML documentation
dotnet_diagnostic.SA0001.severity = none

# SA1649 Filenames should match the first class name (our schemas break this rule but due to the definition of a schema we ignore this)
dotnet_diagnostic.SA1649.severity = suggestion

# SA1300 enums should start with upper case (many return types need lowerr case)
dotnet_diagnostic.SA1300.severity = suggestion

# SA1402 Files should only have 1 type (we sometimes want static extensions in the same file, service patterns etc)
dotnet_diagnostic.SA1402.severity = suggestion

# SA1024 Space should before a colon (conflicts with VS2022's error, there should be no space)
dotnet_diagnostic.SA1024.severity = none

# SA1024 FileNameMustMatchTypeName Disabled as new C#10 record struct crashes the plugin.
dotnet_diagnostic.SA1649.severity = none
 
#SA1009	Closing parenthesis should not be followed by a space. CONFLICT - Compiler has an error if there is a space.
dotnet_diagnostic.SA1009.severity = none

#SA1000	The keyword 'new' should be followed by a space. CCONFLICT - Compiler throws error
dotnet_diagnostic.SA1000.severity = none

##### Rules for CSharpier #####

dotnet_diagnostic.SA1000.severity = none
dotnet_diagnostic.SA1009.severity = none
dotnet_diagnostic.SA1111.severity = none
dotnet_diagnostic.SA1118.severity = none
#see https://github.com/belav/csharpier/issues/526 -->
dotnet_diagnostic.SA1128.severity = none
#see https://github.com/belav/csharpier/issues/527 -->
dotnet_diagnostic.SA1127.severity = none
dotnet_diagnostic.SA1501.severity = none
dotnet_diagnostic.SA1502.severity = none
dotnet_diagnostic.SA1504.severity = none
dotnet_diagnostic.SA1137.severity = none
dotnet_diagnostic.SA1500.severity = none
dotnet_diagnostic.SA1516.severity = none
dotnet_diagnostic.SA1513.severity = none
